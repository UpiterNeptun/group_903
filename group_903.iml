git version команда выдаёт текущую версию программы (если она установлена на ПК)

git init команда запомнить инициализация: указываем папку, в которой git начнёт отслеживать изменения

git status показывает текущее состояние гита, есть ли изменения, которые нужно закоммитить (сохранить)

git add команда добавить (по умолчанию git commit использует этот индекс).

git commit команда сохранить

git log журнал изменений (количество сохранений)

git ceckout переключение между версиями

q нажатие клавиши "q" возвращает в исходное окно терминала

git diff показывает разницу между текущим файлом и сохранённым

Работа с удаленными репозиториями. Скачивание из текущего репозитория и слияние со своей версией
Копировать внешний репозиторий на свой ПК можно командой git clone. Команда git clone составная: она не только загружает все изменения, но и пытается слить все ветки на локальном компьютере и в удаленном репозитории.

git pull

Эта команда позволяет скачать все из текущего репозитория и автоматически сделать merge с нашей версией.

git push

Отправить свою версию репозитория во внешний репозиторий поможет команда git push. При первом её использовании нужна авторизация. Эта команда позволяет отправить нашу версию репозитория на внешний репозиторий. ТРЕБУЕТ АВТОРИЗАЦИИ  на внешнем репозитории.

Как настроить совместную работу

Создать аккаунт на GitHub.com
Создать локальный репозиторий
“Подружить” ваш локальный и удалённый репозитории.
GitHub при создании нового репозитория подскажет, как это можно сделать

Отправить (push) ваш локальный репозиторий в удалённый (на GitHub), при этом, возможно, вам нужно будет авторизоваться на удалённом репозитории
Провести изменения “с другого компьютера”
Выкачать (pull) актуальное состояние из удалённого репозитория
pull request

➜ команда для предложения изменений

➜ запрос на вливание изменений в репозиторий

В больших компаниях один ответственный за проект создает аккаунт. Другие пользователи дают команду pull request. Предлагать изменения на GitHub нужно в отдельной ветке. Сначала пользователь копирует репозиторий на свой компьютер, делает fork репозитория, затем клонирует версию на своём ПК, создаёт ветку с предлагаемыми изменениями, отправляет изменения командой push в свой аккаунт на GitHub и даёт команду pull request.

Как сделать pull request

Делаем (ответвление) репозитория fork

Делаем git clone СВОЕЙ версии репозитория

Создаем новую ветку и в НЕЕ вносим свои изменения

Фиксируем изменения (делаем коммиты)

Отправляем свою версию в свой GitHub

На сайте GitHub нажимаем кнопку pull request
